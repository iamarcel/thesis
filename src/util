#!/usr/bin/env python3

import argparse
import logging

import common.data_utils

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


if __name__ == '__main__':
    command_choices = [
        'config_to_clips',
        'remove_duplicate_clips',
        'add_clips_to', 'merge',
        'move_2d_finished_images',
        'clip_stats',
        'normalize_clips'
    ]

    parser = argparse.ArgumentParser(description='Manipulate clip data files.')
    parser.add_argument('command', metavar='command', type=str, nargs=1,
                        help="The command to execute. One of {}"
                        .format(command_choices),
                        choices=command_choices)
    parser.add_argument('args', metavar='args', type=str, nargs='*',
                        help='Arguments for the command')

    args = parser.parse_args()

    command_name = args.command[0]
    if command_name == 'config_to_clips':
        common.data_utils.config_to_clips(*args.args)
    elif command_name == 'remove_duplicate_clips':
        common.data_utils.remove_duplicate_clips(*args.args)
    elif command_name == 'add_clips_to':
        common.data_utils.add_clips_to(*args.args)
    elif command_name == 'merge':
        common.data_utils.add_clips_to(*args.args)
    elif command_name == 'move_2d_finished_images':
        common.data_utils.move_2d_finished_images(*args.args)
    elif command_name == 'clip_stats':
        common.data_utils.clip_stats(*args.args)
    elif command_name == 'normalize_clips':
        common.data_utils.normalize_clips(*args.args)
    else:
        logger.error("Command {} not found.".format(command_name))
